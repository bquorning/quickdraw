#!/usr/bin/env ruby
# frozen_string_literal: true

start = Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)

require "optparse"
require_relative "../lib/quickdraw"

# Â Load the local configuration
require File.expand_path("config/quickdraw")

module Quickdraw
	options = {}

	OptionParser.new do |parser|
		parser.banner = "Usage: bundle exec qt [options]"

		parser.on("-h", "--help", "Prints this help") do
			puts parser
			exit
		end

		parser.on("-p N", "--processes N", Integer, "Sets the number of processes") do |processes|
			options[:processes] = processes
		end

		parser.on("-t N", "--threads N", Integer, "Sets the number of threads per process") do |threads|
			options[:threads] = threads
		end
	end.parse!

	options[:files] = ARGV[0]

	Quickdraw::Run.new(
		number_of_processes: options[:processes] || Quickdraw::Config.number_of_processes,
		number_of_threads_per_process: options[:threads] || Quickdraw::Config.number_of_threads_per_process,
		files: Dir.glob(options[:files] || Quickdraw::Config.glob)
	).call
end

finish = Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)

puts "Total time: #{Quickdraw::Timer::Duration.new(finish - start)}"
